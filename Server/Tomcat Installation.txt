CentOS 7.3  Tomcat 8.5
Tomcat安装在/data/tomcat

1. 确保安装好了JDK

2. 下载解压安装
[root@dlp ~]# wget http://mirrors.ocf.berkeley.edu/apache/tomcat/tomcat-8/v8.5.14/bin/apache-tomcat-8.5.14.tar.gz
[root@dlp ~]# tar zxvf apache-tomcat-8.5.14.tar.gz
[root@dlp ~]# mkdir /data
[root@dlp ~]# mv apache-tomcat-8.5.14 /data/tomcat 

3. 新增tomcat用户和组
[root@dlp ~]# useradd -M -d /data/tomcat tomcat 

以后需要运行TOMCAT/bin/startup.sh 和 shutdown.sh 的时候，必须是用tomcat用户


4. 修改文件夹权限
[root@dlp ~]# chown -R tomcat. /data/tomcat


5. 把Tomcat安装为系统服务，注意配置里面的路径和变量

[root@dlp ~]# vi /usr/lib/systemd/system/tomcat.service

#########################################################

# create new
[Unit]
Description=Apache Tomcat 8
After=network.target

[Service]
Type=oneshot
ExecStart=/data/tomcat/bin/startup.sh
ExecStop=/data/tomcat/bin/shutdown.sh
RemainAfterExit=yes
User=tomcat
Group=tomcat

[Install]
WantedBy=multi-user.target

#########################################################



6. 重新加载Systemd
# systemctl daemon-reload

7. 启动Tomcat
# systemctl start tomcat

8. 设置开机启动Tomcat
# systemctl enable tomcat

9. 访问http://localhost:8080查看安装启动是否正常







生产环境的优化，需要安装Tomcat Native，这个原生库依赖OpenSSL和APR

参考文档：https://github.com/biezhi/java-bible/blob/master/learn_server/optimization-tomcat8.md

未安装会在日志中提示：
INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found
on the java.library.path: /usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib


1. 安装OpenSSL，CentOS 7.3上OpenSSL版本太低，最低要求1.0.2，据说CentOS7.4会升级OpenSSL

官方网址: https://www.openssl.org/

# wget https://www.openssl.org/source/openssl-1.0.2k.tar.gz
# tar -zxf openssl-1.0.2k.tar.gz
# cd openssl-1.0.2k

################ 注意: 这里需要加入 -fPIC参数，否则后面在安装tomcat native 组件会出错
################ 注意: 不要按照提示去运行 make depend
# ./config --prefix=/usr/local/openssl -fPIC

# make
# make install
# mv /usr/bin/openssl /usr/bin/openssl.bak
# ln -s /usr/local/openssl/bin/openssl /usr/bin/openssl
# openssl version
OpenSSL 1.0.2k  26 Jan 2017


2. 安装APR (Apache Portable Runtime), 官方网址：http://apr.apache.org/

# wget http://mirrors.tuna.tsinghua.edu.cn/apache//apr/apr-1.5.2.tar.gz
# tar xvf apr-1.5.2.tar.gz
# cd apr-1.5.2
# ./configure
# make
# make install


3. 安装Tomcat Native Library，生产环境必须的

进入Tomcat的bin目录. 找到native源代码包并解压
# cd /data/tomcat/bin
# tar xvf tomcat-native.tar.gz
# cd tomcat-native-1.2.12-src/native
# ./configure --with-apr=/usr/local/apr --with-ssl=/usr/local/openssl
# make
# make install


3. 安装成功后还需要对tomcat设置环境变量，

新增文件bin/setenv.sh
# vi setenv.sh

###################################

export CATALINA_HOME=/data/tomcat
export CATALINA_BASE=/data/tomcat

export JAVA_OPTS="$JAVA_OPTS\
 -server\
 -Xms768m\
 -Xmx2048m\
 -Xss512k\
 -Djava.awt.headless=true\
 -Dfile.encoding=utf-8\
 -Djava.net.preferIPv4Stack=true\
 -Djava.security.egd=file:/dev/./urandom"


LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/apr/lib
export LD_LIBRARY_PATH

#####################################

修改文件所有者为tomcat

# chown tomcat. setenv.sh

4. 重新启动tomcat之后，查看日志会有这一行信息，说明已经是APR模式启动了

INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded APR based Apache Tomcat Native library 1.2.12 using APR version 1.5.2.
INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
[main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized (OpenSSL 1.0.2k  26 Jan 2017)

5. 优化server.xml

<Connector  port="8080" 
		maxThreads="8000"
       	minSpareThreads="215"
       	maxSpareThreads="2048"
        connectionTimeout="20000"
        redirectPort="8443"
		acceptCount="100"
        debug="0"
		enableLookups="false"
		disableUploadTimeout="true" URIEncoding="UTF-8" useBodyEncodingForURI="true" />


<Connector 	port="8080" 
            protocol="org.apache.coyote.http11.Http11AprProtocol"/>






